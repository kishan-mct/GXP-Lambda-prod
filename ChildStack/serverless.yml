service: test-child-hello

custom:
  stage: ${opt:stage, self:provider.stage}
  service_name: test-kishan

provider:
  name: aws
  runtime1: python3.9
  stage: dev
  region: us-east-1
  layers:
    - arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1

  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.service_name}-${self:custom1.stage}-ApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.service_name}-${self:custom1.stage}-ApiGatewayRestApiRootResourceId

  environment:
    MY_API_KEY: ${self:custom.service_name}_apikey_${opt:1stage, self:provider.stage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:*
            - lambda:*
          Resource: "*"

package:
  include:
    - ../utils/**
    - ../auth/**
    - ../templates/**


functions:
  # JWT Authentication Check
  jwtAuthorizer1:
    handler: auth.jwt_auth.jwtAuthorizer
    timeout: 30

  
  # Booking additional-question APIS
  additionalQuestionListCreate:
    handler: booking.additional_question.additionalQuestionListCreate
    events:
      - http:
          path: booking/additional-question
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: booking/additional-question
          method: post
          request:
            schemas:
              application/json: ${file(../models/booking/additional_question.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  additionalQuestionReRetriveUpdateDestroy:
    handler: booking.additional_question.additionalQuestionReRetriveUpdateDestroy
    events:
      - http:
          path: booking/additional-question/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/additional-question/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/booking/additional_question.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/additional-question/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  
  # Booking excel-booking APIS
  excelBookingListCreate:
    handler: booking.excel_booking.excelBookingListCreate
    events:
      - http:
          path: booking/excel-booking
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: booking/excel-booking
          method: post
          request:
            schemas:
              application/json: ${file(../models/booking/excel_booking.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  excelBookingReRetriveUpdateDestroy:
    handler: booking.excel_booking.excelBookingReRetriveUpdateDestroy
    events:
      - http:
          path: booking/excel-booking/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/excel-booking/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/booking/excel_booking.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/excel-booking/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  

  # Booking folio APIS
  folioListCreate:
    handler: booking.folio.folioListCreate
    events:
      - http:
          path: booking/folio
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: booking/folio
          method: post
          request:
            schemas:
              application/json: ${file(../models/booking/folio.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  folioReRetriveUpdateDestroy:
    handler: booking.folio.folioReRetriveUpdateDestroy
    events:
      - http:
          path: booking/folio/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/folio/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/booking/folio.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/folio/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  

  # Booking folio-transaction APIS
  folioTransactionListCreate:
    handler: booking.folio_transaction.folioTransactionListCreate
    events:
      - http:
          path: booking/folio-transaction
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: booking/folio-transaction
          method: post
          request:
            schemas:
              application/json: ${file(../models/booking/folio_transaction.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  folioTransactionReRetriveUpdateDestroy:
    handler: booking.folio_transaction.folioTransactionReRetriveUpdateDestroy
    events:
      - http:
          path: booking/folio-transaction/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/folio-transaction/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/booking/folio_transaction.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/folio-transaction/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  

  # Booking night-audit APIS
  nightAuditListCreate:
    handler: booking.night_audit.nightAuditListCreate
    events:
      - http:
          path: booking/night-audit
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: booking/night-audit
          method: post
          request:
            schemas:
              application/json: ${file(../models/booking/night_audit.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  nightAuditReRetriveUpdateDestroy:
    handler: booking.night_audit.nightAuditReRetriveUpdateDestroy
    events:
      - http:
          path: booking/night-audit/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/night-audit/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/booking/night_audit.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/night-audit/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  

  # Booking upsell-order APIS
  upsellOrderListCreate:
    handler: booking.upsell_order.upsellOrderListCreate
    events:
      - http:
          path: booking/upsell-order
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: booking/upsell-order
          method: post
          request:
            schemas:
              application/json: ${file(../models/booking/upsell_order.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  upsellOrderReRetriveUpdateDestroy:
    handler: booking.upsell_order.upsellOrderReRetriveUpdateDestroy
    events:
      - http:
          path: booking/upsell-order/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/upsell-order/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/booking/upsell_order.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: booking/upsell-order/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  

  # guest guest APIS
  guestListCreate:
    handler: guest.guest.guestListCreate
    events:
      - http:
          path: guest/guest
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: guest/guest
          method: post
          request:
            schemas:
              application/json: ${file(../models/guest/guest.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  guestReRetriveUpdateDestroy:
    handler: guest.guest.guestReRetriveUpdateDestroy
    events:
      - http:
          path: guest/guest/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest/guest/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/guest/guest.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest/guest/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  
  # guest company APIS
  companyListCreate:
    handler: guest.company.companyListCreate
    events:
      - http:
          path: guest/company
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: guest/guest
          method: post
          request:
            schemas:
              application/json: ${file(../models/guest/company.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  companyReRetriveUpdateDestroy:
    handler: guest.company.companyReRetriveUpdateDestroy
    events:
      - http:
          path: guest/company/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest/company/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/guest/company.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest/company/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

  # guest-directory app_feature APIS
  appFeatureListCreate:
      handler: guest_directory.app_feature.appFeatureListCreate
      events:
        - http:
            path: guest-directory/app-feature
            method: get
            cors:
              origin: '*'
              headers:
                - Content-Type
                - X-Api-Key
                - authorization
            authorizer:
              name: jwtAuthorizer1
              resultTtlInSeconds: 0
              identitySource: method.request.header.Authorization
        
        - http:
            path: guest-directory/app-feature
            method: post
            request:
              schemas:
                application/json: ${file(../models/guest_directory/app_feature.json)}
            cors:
              origin: '*'
              headers:
                - Content-Type
                - X-Api-Key
                - authorization
            authorizer:
              name: jwtAuthorizer1
              resultTtlInSeconds: 0
              identitySource: method.request.header.Authorization
    
  appFeatureReRetriveUpdateDestroy:
    handler: guest_directory.app_feature.appFeatureReRetriveUpdateDestroy
    events:
      - http:
          path: guest-directory/app-feature/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/app-feature/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/guest_directory/app_feature.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/app-feature/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  
  
  # guest-directory checkin-guest-experience APIS
  checkinGuestExperienceListCreate:
    handler: guest_directory.checkin_guest_experience.checkinGuestExperienceListCreate
    events:
      - http:
          path: guest-directory/checkin-guest-experience
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: guest-directory/checkin-guest-experience
          method: post
          request:
            schemas:
              application/json: ${file(../models/guest_directory/checkin_guest_experience.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
  
  checkinGuestExperienceReRetriveUpdateDestroy:
    handler: guest_directory.checkin_guest_experience.checkinGuestExperienceReRetriveUpdateDestroy
    events:
      - http:
          path: guest-directory/checkin-guest-experience/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/checkin-guest-experience/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/guest_directory/checkin_guest_experience.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/checkin-guest-experience/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  
  
  # guest-directory hd-page APIS
  hdPageListCreate:
    handler: guest_directory.hd_page.hdPageListCreate
    events:
      - http:
          path: guest-directory/hd-page
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: guest-directory/hd-page
          method: post
          request:
            schemas:
              application/json: ${file(../models/guest_directory/hd_page.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  hdPageReRetriveUpdateDestroy:
    handler: guest_directory.hd_page.hdPageReRetriveUpdateDestroy
    events:
      - http:
          path: guest-directory/hd-page/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/hd-page/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/guest_directory/hd_page.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/hd-page/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
 
  # guest-directory hd-pageImage APIS
  hdPageImageListCreate:
    handler: guest_directory.hd_pageImage.hdPageImageListCreate
    events:
      - http:
          path: guest-directory/hd-pageImage
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: guest-directory/hd-pageImage
          method: post
          request:
            schemas:
              application/json: ${file(../models/guest_directory/hd_pageImage.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  hdPageImageReRetriveUpdateDestroy:
    handler: guest_directory.hd_pageImage.hdPageImageReRetriveUpdateDestroy
    events:
      - http:
          path: guest-directory/hd-pageImage/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/hd-pageImage/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/guest_directory/hd_pageImage.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/hd-pageImage/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
  
  # guest-directory light-box APIS
  lightBoxListCreate:
    handler: guest_directory.light_box.lightBoxListCreate
    events:
      - http:
          path: guest-directory/light-box
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: guest-directory/light-box
          method: post
          request:
            schemas:
              application/json: ${file(../models/guest_directory/light_box.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  lightBoxReRetriveUpdateDestroy:
    handler: guest_directory.light_box.lightBoxReRetriveUpdateDestroy
    events:
      - http:
          path: guest-directory/light-box/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/light-box/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/guest_directory/light_box.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: guest-directory/light-box/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  # notification app-notification-grorup APIS
  appNotificationGroupListCreate:
    handler: notification.app_notification_grorup.appNotificationGroupListCreate
    events:
      - http:
          path: notification/app-grorup
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: notification/app-grorup
          method: post
          request:
            schemas:
              application/json: ${file(../models/notification/app_notification_grorup.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  appNotificationGroupReRetriveUpdateDestroy:
    handler: notification.app_notification_grorup.appNotificationGroupReRetriveUpdateDestroy
    events:
      - http:
          path: notification/app-grorup/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/app-grorup/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/notification/app_notification_grorup.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/app-grorup/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

  # notification email-log APIS
  emailLogListCreate:
    handler: notification.email_log.emailLogListCreate
    events:
      - http:
          path: notification/email-log
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: notification/email-log
          method: post
          request:
            schemas:
              application/json: ${file(../models/notification/email_log.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  emailLogReRetriveUpdateDestroy:
    handler: notification.email_log.emailLogReRetriveUpdateDestroy
    events:
      - http:
          path: notification/email-log/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/email-log/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/notification/email_log.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/email-log/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  # notification email-log-activity APIS
  emailLogActivityListCreate:
    handler: notification.email_log_activity.emailLogActivityListCreate
    events:
      - http:
          path: notification/email-log-activity
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: notification/email-log-activity
          method: post
          request:
            schemas:
              application/json: ${file(../models/notification/email_log_activity.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  emailLogActivityReRetriveUpdateDestroy:
    handler: notification.email_log_activity.emailLogActivityReRetriveUpdateDestroy
    events:
      - http:
          path: notification/email-log-activity/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/email-log-activity/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/notification/email_log_activity.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/email-log-activity/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  # notification email_notification_type APIS
  emailNotificationTypeListCreate:
    handler: notification.email_notification_type.emailNotificationTypeListCreate
    events:
      - http:
          path: notification/email-notification-type
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: notification/email-notification-type
          method: post
          request:
            schemas:
              application/json: ${file(../models/notification/email_notification_type.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  emailNotificationTypeReRetriveUpdateDestroy:
    handler: notification.email_notification_type.emailNotificationTypeReRetriveUpdateDestroy
    events:
      - http:
          path: notification/email-notification-type/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/email-notification-type/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/notification/email_notification_type.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/email-notification-type/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  # notification email-notification APIS
  emailNotificationListCreate:
    handler: notification.email_notification.emailNotificationListCreate
    events:
      - http:
          path: notification/email-notification
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: notification/email-notification
          method: post
          request:
            schemas:
              application/json: ${file(../models/notification/email_notification.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  emailNotificationReRetriveUpdateDestroy:
    handler: notification.email_notification.emailNotificationReRetriveUpdateDestroy
    events:
      - http:
          path: notification/email-notification/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/email-notification/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/notification/email_notification.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/email-notification/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


# notification sms-notification-type APIS
  smsNotificationTypeListCreate:
    handler: notification.sms_notification_type.smsNotificationTypeListCreate
    events:
      - http:
          path: notification/sms-notification-type
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: notification/sms-notification-type
          method: post
          request:
            schemas:
              application/json: ${file(../models/notification/sms_notification_type.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  smsNotificationTypeReRetriveUpdateDestroy:
    handler: notification.sms_notification_type.smsNotificationTypeReRetriveUpdateDestroy
    events:
      - http:
          path: notification/sms-notification-type/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/sms-notification-type/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/notification/sms_notification_type.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/sms-notification-type/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


# notification sms-notification APIS
  smsNotificationListCreate:
    handler: notification.sms_notification.smsNotificationListCreate
    events:
      - http:
          path: notification/sms-notification
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: notification/sms-notification
          method: post
          request:
            schemas:
              application/json: ${file(../models/notification/sms_notification.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  smsNotificationReRetriveUpdateDestroy:
    handler: notification.sms_notification.smsNotificationReRetriveUpdateDestroy
    events:
      - http:
          path: notification/sms-notification/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/sms-notification/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/notification/sms_notification.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: notification/sms-notification/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  # room bed-type APIS
  bedTypeListCreate:
    handler: room.bed_type.bedTypeListCreate
    events:
      - http:
          path: room/bed-type
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/bed-type
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/bed_type.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  bedTypeReRetriveUpdateDestroy:
    handler: room.bed_type.bedTypeReRetriveUpdateDestroy
    events:
      - http:
          path: room/bed-type/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/bed-type/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/bed_type.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/bed-type/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  # room building APIS
  buildingListCreate:
    handler: room.building.buildingListCreate
    events:
      - http:
          path: room/building
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/building
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/building.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  buildingReRetriveUpdateDestroy:
    handler: room.building.buildingReRetriveUpdateDestroy
    events:
      - http:
          path: room/building/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/building/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/building.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/building/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  # room floor-image APIS
  floorImageListCreate:
    handler: room.floor_image.floorImageListCreate
    events:
      - http:
          path: room/floor-image
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/floor-image
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/floor_image.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  floorImageReRetriveUpdateDestroy:
    handler: room.floor_image.floorImageReRetriveUpdateDestroy
    events:
      - http:
          path: room/floor-image/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/floor-image/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/floor_image.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/floor-image/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

  # room floor APIS
  floorListCreate:
    handler: room.floor.floorListCreate
    events:
      - http:
          path: room/floor
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/floor
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/floor.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  flooReRetriveUpdateDestroy:
    handler: room.floor.flooReRetriveUpdateDestroy
    events:
      - http:
          path: room/floor/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/floor/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/floor.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/floor/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


  # room rate_plan APIS
  ratePlanListCreate:
    handler: room.rate_plan.ratePlanListCreate
    events:
      - http:
          path: room/rate-plan
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/rate-plan
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/rate_plan.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  ratePlaneRetriveUpdateDestroy:
    handler: room.rate_plan.ratePlaneRetriveUpdateDestroy
    events:
      - http:
          path: room/rate-plan/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/rate-plan/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/rate_plan.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/rate-plan/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


 # room room-availability APIS
  roomAvailabilityListCreate:
    handler: room.room_availability.roomAvailabilityListCreate
    events:
      - http:
          path: room/room-availability
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/room-availability
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/room_availability.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  roomAvailabilityeRetriveUpdateDestroy:
    handler: room.room_availability.roomAvailabilityeRetriveUpdateDestroy
    events:
      - http:
          path: room/room-availability/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/room-availability/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/room_availability.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/room-availability/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


 # room room-type-image APIS
  roomIypeImageListCreate:
    handler: room.room_type_image.roomIypeImageListCreate
    events:
      - http:
          path: room/room-type-image
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/room-type-image
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/room_type_image.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  roomIypeImageeRetriveUpdateDestroy:
    handler: room.room_type_image.roomIypeImageeRetriveUpdateDestroy
    events:
      - http:
          path: room/room-type-image/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/room-type-image/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/room_type_image.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/room-type-image/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


 # room room-type APIS
  roomTypeListCreate:
    handler: room.room_type.roomTypeListCreate
    events:
      - http:
          path: room/room-type
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/room-type
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/room_type.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  roomTypeRetriveUpdateDestroy:
    handler: room.room_type.roomTypeRetriveUpdateDestroy
    events:
      - http:
          path: room/room-type/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/room-type/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/room_type.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/room-type/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request


# room room APIS
  roomListCreate:
    handler: room.room.roomListCreate
    events:
      - http:
          path: room/room
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
      
      - http:
          path: room/room
          method: post
          request:
            schemas:
              application/json: ${file(../models/room/room.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
    
  roomRetriveUpdateDestroy:
    handler: room.room.roomRetriveUpdateDestroy
    events:
      - http:
          path: room/room/{id}
          method: get
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/room/{id}
          method: patch
          request:
            schemas:
              application/json: ${file(../models/room/room.json)}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer:
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request

      - http:
          path: room/room/{id}
          method: delete
          cors:
            origin: '*'
            headers:
              - Content-Type
              - X-Api-Key
              - authorization
          authorizer: 
            name: jwtAuthorizer1
            resultTtlInSeconds: 0
            identitySource: method.request.header.Authorization
            type: request
