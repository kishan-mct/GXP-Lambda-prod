{
  "service": {
    "service": "dev-gxp-service-hotel",
    "serviceObject": {
      "name": "dev-gxp-service-hotel"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "stage": "dev",
      "region": "us-east-1",
      "layers": [
        "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
      ],
      "apiGateway": {
        "restApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "restApiRootResourceId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiRootResourceId"
        }
      },
      "environment": {
        "MY_API_KEY": "dev-gxp-service_apikey_dev"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:*",
                "lambda:*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "JwtAuthorizer2LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-JwtAuthorizer2"
            }
          },
          "HotelListCreateUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-hotelListCreateUpdateDestroy"
            }
          },
          "HotelListCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-hotelListCreate"
            }
          },
          "HotelUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-hotelUpdateDestroy"
            }
          },
          "HotelBrandlistLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-hotelBrandlist"
            }
          },
          "HotelBrandCreateUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-hotelBrandCreateUpdateDestroy"
            }
          },
          "BuildingListCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-buildingListCreate"
            }
          },
          "BuildingUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-buildingUpdateDestroy"
            }
          },
          "FloorListCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-floorListCreate"
            }
          },
          "FloorUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-floorUpdateDestroy"
            }
          },
          "RoomTypeListCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-roomTypeListCreate"
            }
          },
          "RoomTypeUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-roomTypeUpdateDestroy"
            }
          },
          "RoomListCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-roomListCreate"
            }
          },
          "RoomUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-roomUpdateDestroy"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev-gxp-service-hotel",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-gxp-service-hotel-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-gxp-service-hotel-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "dev-gxp-service-hotel",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "JwtAuthorizer2LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "common.jwt_auth.JwtAuthorizer",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-JwtAuthorizer2",
              "MemorySize": 1024,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev",
                  "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "JwtAuthorizer2LogGroup"
            ]
          },
          "HotelListCreateUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "hotel.hotel.hotelListCreateUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-hotelListCreateUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "HotelListCreateUpdateDestroyLogGroup"
            ]
          },
          "HotelListCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "hotel.hotel.hotelListCreate",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-hotelListCreate",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "HotelListCreateLogGroup"
            ]
          },
          "HotelUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "hotel.hotel.hotelUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-hotelUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "HotelUpdateDestroyLogGroup"
            ]
          },
          "HotelBrandlistLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "hotel.hotel_brand.hotelBrandlist",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-hotelBrandlist",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "HotelBrandlistLogGroup"
            ]
          },
          "HotelBrandCreateUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "hotel.hotel_brand.hotelBrandCreateUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-hotelBrandCreateUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "HotelBrandCreateUpdateDestroyLogGroup"
            ]
          },
          "BuildingListCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "room.building.buildingListCreate",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-buildingListCreate",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "BuildingListCreateLogGroup"
            ]
          },
          "BuildingUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "room.building.buildingUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-buildingUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "BuildingUpdateDestroyLogGroup"
            ]
          },
          "FloorListCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "room.floor.floorListCreate",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-floorListCreate",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "FloorListCreateLogGroup"
            ]
          },
          "FloorUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "room.floor.floorUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-floorUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "FloorUpdateDestroyLogGroup"
            ]
          },
          "RoomTypeListCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "room.room_type.roomTypeListCreate",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-roomTypeListCreate",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "RoomTypeListCreateLogGroup"
            ]
          },
          "RoomTypeUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "room.room_type.roomTypeUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-roomTypeUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "RoomTypeUpdateDestroyLogGroup"
            ]
          },
          "RoomListCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "room.room.roomListCreate",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-roomListCreate",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "RoomListCreateLogGroup"
            ]
          },
          "RoomUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z/dev-gxp-service-hotel.zip"
              },
              "Handler": "room.room.roomUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-hotel-dev-roomUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "RoomUpdateDestroyLogGroup"
            ]
          },
          "JwtAuthorizer2LambdaVersionQhLVGx27dIj6CsnosPv9a6nZ5140vTfszsjhkd5C8Mo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "JwtAuthorizer2LambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "HotelListCreateUpdateDestroyLambdaVersion3W2PhXIXBT7meRtY3KezEeQJZB7PYH6yNJ0nxSk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HotelListCreateUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "HotelListCreateLambdaVersionoJMVytgPhar2Cea38FBrMwYzecXElD1MNesP3ffhXxo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HotelListCreateLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "HotelUpdateDestroyLambdaVersionT9QMw9A6wTtsd9h5Q5Z4Q8EXotZXLDPRjdZKrd5Lv0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HotelUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "HotelBrandlistLambdaVersioniakG1TM1P9f0GRW8CJN9vHOu2w3QCtNDLfrGrMVM2g": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HotelBrandlistLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "HotelBrandCreateUpdateDestroyLambdaVersionya0LG79hu6s7lkWt1fiIZ3sJ7HZwJ5tIC17U4E0Mec8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HotelBrandCreateUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "BuildingListCreateLambdaVersion8vB4lsZHzR4IlaAHIRBAfAtREXpx3jft3MJDsvyMg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BuildingListCreateLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "BuildingUpdateDestroyLambdaVersionSpquCzRPX5fdz3GnQzoviH9Eg5ZN0iSvrkmnC9LXg1M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BuildingUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "FloorListCreateLambdaVersion70ntD27fJf2miUqZphDKzUft4hgpTQba6VBCIdmECs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FloorListCreateLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "FloorUpdateDestroyLambdaVersionEesb6j2EbQHCGmCo5eLUTtxXasDeVN74Ob0chUMbE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FloorUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "RoomTypeListCreateLambdaVersionGOZgX4K8PUnzTlcte3HI6P45c8k0a6JTOQUK61axAwU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RoomTypeListCreateLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "RoomTypeUpdateDestroyLambdaVersiongnQbkF4M35XeMkIH6FhzrTx4bJ0VvZqfswUHFRfOWQs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RoomTypeUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "RoomListCreateLambdaVersionnxmGVcU7GlQ8Ux2PsgmPDDewZA6AuBweg5P5Za7kyQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RoomListCreateLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "RoomUpdateDestroyLambdaVersionIy11zeOinPefBAjHR2LyPqKkQYns3ULVGRabCuls8kg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RoomUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "1x8kj/2Uo0XHriurtYsXrcOBxzSockJXR5DLaqfbzdI="
            }
          },
          "ApiGatewayResourceHotel": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiRootResourceId"
              },
              "PathPart": "hotel",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceHotelHotel": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceHotel"
              },
              "PathPart": "hotel",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceHotelHotelIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceHotelHotel"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceHotelHotelDashbrand": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceHotel"
              },
              "PathPart": "hotel-brand",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceHotelHotelDashbrandIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceHotelHotelDashbrand"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoom": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiRootResourceId"
              },
              "PathPart": "room",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoomRoomDashbuilding": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRoom"
              },
              "PathPart": "room-building",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoomRoomDashbuildingIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRoomRoomDashbuilding"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoomRoomDashfloor": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRoom"
              },
              "PathPart": "room-floor",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoomRoomDashfloorIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRoomRoomDashfloor"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoomRoomDashtype": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRoom"
              },
              "PathPart": "room-type",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoomRoomDashtypeIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRoomRoomDashtype"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoomRoom": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRoom"
              },
              "PathPart": "room",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceRoomRoomIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRoomRoom"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodHotelHotelOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotel"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodHotelHotelIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodHotelHotelDashbrandOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelDashbrand"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodHotelHotelDashbrandIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelDashbrandIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashbuildingOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashbuilding"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashbuildingIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashbuildingIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashfloorOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashfloor"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashfloorIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashfloorIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashtypeOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashtype"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashtypeIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashtypeIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodRoomRoomOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoom"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodRoomRoomIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodHotelHotelGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotel"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodHotelHotelPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotel"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodHotelHotelPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotel"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodHotelHotelPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodHotelHotelIdVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodHotelHotelIdVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodHotelHotelIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodHotelHotelDashbrandGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelDashbrand"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelBrandlistLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodHotelHotelDashbrandPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelDashbrand"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelBrandCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodHotelHotelDashbrandPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodHotelHotelDashbrandIdVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelDashbrandIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelBrandCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodHotelHotelDashbrandIdVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodHotelHotelDashbrandIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceHotelHotelDashbrandIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelBrandCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashbuildingGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashbuilding"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BuildingListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashbuildingPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashbuilding"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BuildingListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodRoomRoomDashbuildingPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashbuildingIdVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashbuildingIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BuildingUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodRoomRoomDashbuildingIdVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashbuildingIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashbuildingIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BuildingUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashfloorGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashfloor"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FloorListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashfloorPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashfloor"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FloorListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodRoomRoomDashfloorPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashfloorIdVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashfloorIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FloorUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodRoomRoomDashfloorIdVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashfloorIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashfloorIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FloorUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashtypeGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashtype"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RoomTypeListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashtypePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashtype"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RoomTypeListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodRoomRoomDashtypePostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashtypeIdVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashtypeIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RoomTypeUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodRoomRoomDashtypeIdVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomDashtypeIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomDashtypeIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RoomTypeUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoom"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RoomListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoom"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RoomListCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodRoomRoomPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomIdVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RoomUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodRoomRoomIdVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodRoomRoomIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRoomRoomIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RoomUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer2ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayDevgxpservicehotelRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "dev-gxp-service-hotel-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayMethodHotelHotelPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "Create_Hotel",
                "type": "object",
                "properties": {
                  "brand_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "group_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "hotel_name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "property_code": {
                    "type": "string",
                    "maxLength": 8
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                  },
                  "billing_email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 250
                  },
                  "front_desk_email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 250
                  },
                  "gxp_app_theme_color": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "payment_gateway_type": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "favicon_icon": {
                    "type": "string",
                    "format": "uri"
                  },
                  "logo": {
                    "type": "string",
                    "format": "uri"
                  },
                  "currency": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "check_in_time": {
                    "type": "string",
                    "format": "time"
                  },
                  "check_out_time": {
                    "type": "string",
                    "format": "time"
                  },
                  "early_check_in_time": {
                    "type": "string",
                    "format": "time"
                  },
                  "late_check_out_time": {
                    "type": "string",
                    "format": "time"
                  },
                  "time_zone": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "time_formate": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "date_format": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "date_time_format": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "address": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "latitude": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "longitude": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "website": {
                    "type": "string",
                    "maxLength": 2000,
                    "format": "uri"
                  },
                  "map_location_url": {
                    "type": "string",
                    "maxLength": 2000,
                    "format": "uri"
                  },
                  "front_desk_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "whatsapp_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "phone_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "sms_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "sms_number_iso": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "manager_email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 250
                  },
                  "manager_name": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "manager_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "total_rooms": {
                    "type": "integer"
                  },
                  "wifi_password": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "g_business_detail": {
                    "type": "object",
                    "default": {}
                  },
                  "g_place_id": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "g_rating": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10
                  },
                  "notes": {
                    "type": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "is_email_service": {
                    "type": "boolean"
                  },
                  "is_sms_service": {
                    "type": "boolean"
                  },
                  "is_gxp_app_service": {
                    "type": "boolean"
                  },
                  "is_mobile_key_support": {
                    "type": "boolean"
                  },
                  "is_pms_connection": {
                    "type": "boolean"
                  },
                  "hotel_domain": {
                    "type": "string",
                    "maxLength": 50
                  }
                },
                "required": [
                  "brand_id",
                  "hotel_name",
                  "property_code",
                  "email",
                  "gxp_app_theme_color",
                  "currency",
                  "check_in_time",
                  "check_out_time",
                  "early_check_in_time",
                  "late_check_out_time",
                  "time_zone",
                  "time_formate",
                  "date_format",
                  "date_time_format",
                  "address",
                  "city",
                  "state",
                  "zip_code",
                  "country",
                  "latitude",
                  "longitude",
                  "map_location_url",
                  "front_desk_number",
                  "sms_number_iso",
                  "total_rooms",
                  "g_business_detail",
                  "g_rating",
                  "is_active",
                  "is_email_service",
                  "is_sms_service",
                  "is_gxp_app_service",
                  "is_mobile_key_support",
                  "is_pms_connection"
                ]
              }
            }
          },
          "ApiGatewayMethodHotelHotelIdVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "update_Hotel",
                "type": "object",
                "properties": {
                  "brand_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "group_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "hotel_name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "property_code": {
                    "type": "string",
                    "maxLength": 8
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                  },
                  "billing_email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 250
                  },
                  "front_desk_email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 250
                  },
                  "gxp_app_theme_color": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "payment_gateway_type": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "favicon_icon": {
                    "type": "string",
                    "format": "uri"
                  },
                  "logo": {
                    "type": "string",
                    "format": "uri"
                  },
                  "currency": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "check_in_time": {
                    "type": "string",
                    "format": "time"
                  },
                  "check_out_time": {
                    "type": "string",
                    "format": "time"
                  },
                  "early_check_in_time": {
                    "type": "string",
                    "format": "time"
                  },
                  "late_check_out_time": {
                    "type": "string",
                    "format": "time"
                  },
                  "time_zone": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "time_formate": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "date_format": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "date_time_format": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "address": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "latitude": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "longitude": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "website": {
                    "type": "string",
                    "maxLength": 2000,
                    "format": "uri"
                  },
                  "map_location_url": {
                    "type": "string",
                    "maxLength": 2000,
                    "format": "uri"
                  },
                  "front_desk_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "whatsapp_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "phone_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "sms_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "sms_number_iso": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "manager_email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 250
                  },
                  "manager_name": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "manager_number": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "total_rooms": {
                    "type": "integer"
                  },
                  "wifi_password": {
                    "type": "string",
                    "maxLength": 30
                  },
                  "g_business_detail": {
                    "type": "object",
                    "default": {}
                  },
                  "g_place_id": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "g_rating": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 10
                  },
                  "notes": {
                    "type": "string"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "is_email_service": {
                    "type": "boolean"
                  },
                  "is_sms_service": {
                    "type": "boolean"
                  },
                  "is_gxp_app_service": {
                    "type": "boolean"
                  },
                  "is_mobile_key_support": {
                    "type": "boolean"
                  },
                  "is_pms_connection": {
                    "type": "boolean"
                  },
                  "hotel_domain": {
                    "type": "string",
                    "maxLength": 50
                  }
                },
                "required": [
                  "hotel_name"
                ]
              }
            }
          },
          "ApiGatewayMethodHotelHotelDashbrandPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "BrandCreate",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                  },
                  "mobile": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "mobile_iso": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "favicon_icon": {
                    "type": "string",
                    "format": "uri"
                  },
                  "logo": {
                    "type": "string"
                  },
                  "membership_reward_image": {
                    "type": "string",
                    "format": "uri"
                  },
                  "membership_reward_tnc": {
                    "type": "string"
                  },
                  "rewards_website_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "rewards_website_join_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "is_support_membership_rewards": {
                    "type": "boolean"
                  },
                  "address_line_first": {
                    "type": "string"
                  },
                  "address_line_second": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "website_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "contact_name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "contact_email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": 255
                  },
                  "contact_phone": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "number_of_hotels": {
                    "type": "integer"
                  }
                },
                "required": [
                  "name",
                  "email",
                  "mobile",
                  "is_active",
                  "is_support_membership_rewards",
                  "address_line_first",
                  "address_line_second",
                  "city",
                  "state",
                  "zip_code",
                  "country",
                  "contact_name",
                  "contact_email",
                  "contact_phone"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodHotelHotelDashbrandIdVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "HotelBrandUpdate",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "mobile": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "mobile_iso": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "favicon_icon": {
                    "type": "string",
                    "format": "uri"
                  },
                  "logo": {
                    "type": "string",
                    "format": "uri"
                  },
                  "membership_reward_image": {
                    "type": "string",
                    "format": "uri"
                  },
                  "membership_reward_tnc": {
                    "type": "string"
                  },
                  "rewards_website_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "rewards_website_join_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "is_support_membership_rewards": {
                    "type": "boolean"
                  },
                  "address_line_first": {
                    "type": "string"
                  },
                  "address_line_second": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "website_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "contact_name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "contact_email": {
                    "type": "string",
                    "format": "email"
                  },
                  "contact_phone": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "number_of_hotels": {
                    "type": "integer"
                  }
                },
                "required": [
                  "email"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashbuildingPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "BuildingCreate",
                "type": "object",
                "properties": {
                  "building_name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "short_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "images": {
                    "type": "string"
                  },
                  "total_floor": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "total_room": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "is_active": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "building_name",
                  "short_name",
                  "total_floor",
                  "total_room",
                  "is_active"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashbuildingIdVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "BuildingUpdate",
                "type": "object",
                "properties": {
                  "building_name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "short_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "images": {
                    "type": "string"
                  },
                  "total_floor": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "total_room": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "is_active": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashfloorPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "FloorCreate",
                "type": "object",
                "properties": {
                  "building_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "floor_name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "short_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "images": {
                    "type": "string"
                  },
                  "total_room": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                  },
                  "is_active": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "building_id",
                  "floor_name",
                  "short_name",
                  "total_room",
                  "is_active"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashfloorIdVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "FloorUpdate",
                "type": "object",
                "properties": {
                  "floor_name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "short_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "total_room": {
                    "type": "integer",
                    "minimum": 0,
                    "default": 0
                  },
                  "is_active": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashtypePostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "RoomtypeCreate",
                "type": "object",
                "properties": {
                  "roomtype_name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "short_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "images": {
                    "type": "string"
                  },
                  "total_room": {
                    "type": "integer"
                  },
                  "room_size": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 9999.99
                  },
                  "std_rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 9999.99
                  },
                  "kiosk_rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 9999.99
                  },
                  "max_adult": {
                    "type": "integer"
                  },
                  "max_children": {
                    "type": "integer"
                  },
                  "features": {
                    "type": "object",
                    "default": {}
                  },
                  "is_enable_ota": {
                    "type": "boolean"
                  },
                  "is_enable_web": {
                    "type": "boolean"
                  },
                  "is_enable_kiosk": {
                    "type": "boolean"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "hk_stay_over_credit": {
                    "type": "integer"
                  },
                  "hk_stay_over_duration": {
                    "type": "string"
                  },
                  "hk_check_out_credit": {
                    "type": "integer"
                  },
                  "hk_check_out_duration": {
                    "type": "string"
                  },
                  "priority_order": {
                    "type": "integer"
                  }
                },
                "required": [
                  "roomtype_name",
                  "short_name",
                  "total_room",
                  "room_size",
                  "std_rate",
                  "kiosk_rate",
                  "max_adult",
                  "max_children",
                  "features",
                  "is_enable_ota",
                  "is_enable_web",
                  "is_enable_kiosk",
                  "is_active",
                  "hk_stay_over_credit",
                  "hk_stay_over_duration",
                  "hk_check_out_credit",
                  "hk_check_out_duration",
                  "priority_order"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodRoomRoomDashtypeIdVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "RoomtypeCreate",
                "type": "object",
                "properties": {
                  "roomtype_name": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "short_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "images": {
                    "type": "object",
                    "default": {}
                  },
                  "total_room": {
                    "type": "integer"
                  },
                  "room_size": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 9999.99
                  },
                  "std_rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 9999.99
                  },
                  "kiosk_rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 9999.99
                  },
                  "max_adult": {
                    "type": "integer"
                  },
                  "max_children": {
                    "type": "integer"
                  },
                  "features": {
                    "type": "object",
                    "default": {}
                  },
                  "is_enable_ota": {
                    "type": "boolean"
                  },
                  "is_enable_web": {
                    "type": "boolean"
                  },
                  "is_enable_kiosk": {
                    "type": "boolean"
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "hk_stay_over_credit": {
                    "type": "integer"
                  },
                  "hk_stay_over_duration": {
                    "type": "string"
                  },
                  "hk_check_out_credit": {
                    "type": "integer"
                  },
                  "hk_check_out_duration": {
                    "type": "string"
                  },
                  "priority_order": {
                    "type": "integer"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodRoomRoomPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "RoomCreate",
                "type": "object",
                "properties": {
                  "building_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "floor_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "room_type_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "booking_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "room_number": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "connect_room_number": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "is_comman": {
                    "type": "boolean",
                    "default": false
                  },
                  "is_accessible": {
                    "type": "boolean",
                    "default": false
                  },
                  "is_pet_friendly": {
                    "type": "boolean",
                    "default": false
                  },
                  "is_smoking": {
                    "type": "boolean",
                    "default": false
                  },
                  "occupancy_status": {
                    "type": "string",
                    "maxLength": 5
                  },
                  "occupancy_reason": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "hk_status": {
                    "type": "string",
                    "maxLength": 5
                  }
                },
                "required": [
                  "building_id",
                  "floor_id",
                  "room_type_id",
                  "room_number",
                  "is_comman",
                  "is_accessible",
                  "is_pet_friendly",
                  "is_smoking",
                  "occupancy_status",
                  "hk_status"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodRoomRoomIdVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "RoomUPdate",
                "type": "object",
                "properties": {
                  "building_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "floor_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "room_type_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "booking_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "room_number": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "connect_room_number": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "is_comman": {
                    "type": "boolean",
                    "default": false
                  },
                  "is_accessible": {
                    "type": "boolean",
                    "default": false
                  },
                  "is_pet_friendly": {
                    "type": "boolean",
                    "default": false
                  },
                  "is_smoking": {
                    "type": "boolean",
                    "default": false
                  },
                  "occupancy_status": {
                    "type": "string",
                    "maxLength": 5
                  },
                  "occupancy_reason": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "hk_status": {
                    "type": "string",
                    "maxLength": 5
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "JwtAuthorizer2ApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 0,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "JwtAuthorizer2",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "JwtAuthorizer2LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1718272978404": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodHotelHotelOptions",
              "ApiGatewayMethodHotelHotelIdVarOptions",
              "ApiGatewayMethodHotelHotelDashbrandOptions",
              "ApiGatewayMethodHotelHotelDashbrandIdVarOptions",
              "ApiGatewayMethodRoomRoomDashbuildingOptions",
              "ApiGatewayMethodRoomRoomDashbuildingIdVarOptions",
              "ApiGatewayMethodRoomRoomDashfloorOptions",
              "ApiGatewayMethodRoomRoomDashfloorIdVarOptions",
              "ApiGatewayMethodRoomRoomDashtypeOptions",
              "ApiGatewayMethodRoomRoomDashtypeIdVarOptions",
              "ApiGatewayMethodRoomRoomOptions",
              "ApiGatewayMethodRoomRoomIdVarOptions",
              "ApiGatewayMethodHotelHotelGet",
              "ApiGatewayMethodHotelHotelPatch",
              "ApiGatewayMethodHotelHotelGet",
              "ApiGatewayMethodHotelHotelPost",
              "ApiGatewayMethodHotelHotelIdVarPatch",
              "ApiGatewayMethodHotelHotelIdVarDelete",
              "ApiGatewayMethodHotelHotelDashbrandGet",
              "ApiGatewayMethodHotelHotelDashbrandPost",
              "ApiGatewayMethodHotelHotelDashbrandIdVarPatch",
              "ApiGatewayMethodHotelHotelDashbrandIdVarDelete",
              "ApiGatewayMethodRoomRoomDashbuildingGet",
              "ApiGatewayMethodRoomRoomDashbuildingPost",
              "ApiGatewayMethodRoomRoomDashbuildingIdVarPatch",
              "ApiGatewayMethodRoomRoomDashbuildingIdVarDelete",
              "ApiGatewayMethodRoomRoomDashfloorGet",
              "ApiGatewayMethodRoomRoomDashfloorPost",
              "ApiGatewayMethodRoomRoomDashfloorIdVarPatch",
              "ApiGatewayMethodRoomRoomDashfloorIdVarDelete",
              "ApiGatewayMethodRoomRoomDashtypeGet",
              "ApiGatewayMethodRoomRoomDashtypePost",
              "ApiGatewayMethodRoomRoomDashtypeIdVarPatch",
              "ApiGatewayMethodRoomRoomDashtypeIdVarDelete",
              "ApiGatewayMethodRoomRoomGet",
              "ApiGatewayMethodRoomRoomPost",
              "ApiGatewayMethodRoomRoomIdVarPatch",
              "ApiGatewayMethodRoomRoomIdVarDelete"
            ]
          },
          "HotelListCreateUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HotelListCreateUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "JwtAuthorizer2LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "JwtAuthorizer2LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HotelListCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HotelListCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HotelUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HotelUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HotelBrandlistLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HotelBrandlistLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HotelBrandCreateUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HotelBrandCreateUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "BuildingListCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BuildingListCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "BuildingUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BuildingUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FloorListCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FloorListCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FloorUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FloorUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RoomTypeListCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RoomTypeListCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RoomTypeUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RoomTypeUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RoomListCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RoomListCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RoomUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RoomUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-ServerlessDeploymentBucketName"
            }
          },
          "JwtAuthorizer2LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "JwtAuthorizer2LambdaVersionQhLVGx27dIj6CsnosPv9a6nZ5140vTfszsjhkd5C8Mo"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-JwtAuthorizer2LambdaFunctionQualifiedArn"
            }
          },
          "HotelListCreateUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HotelListCreateUpdateDestroyLambdaVersion3W2PhXIXBT7meRtY3KezEeQJZB7PYH6yNJ0nxSk"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-HotelListCreateUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "HotelListCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HotelListCreateLambdaVersionoJMVytgPhar2Cea38FBrMwYzecXElD1MNesP3ffhXxo"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-HotelListCreateLambdaFunctionQualifiedArn"
            }
          },
          "HotelUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HotelUpdateDestroyLambdaVersionT9QMw9A6wTtsd9h5Q5Z4Q8EXotZXLDPRjdZKrd5Lv0"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-HotelUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "HotelBrandlistLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HotelBrandlistLambdaVersioniakG1TM1P9f0GRW8CJN9vHOu2w3QCtNDLfrGrMVM2g"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-HotelBrandlistLambdaFunctionQualifiedArn"
            }
          },
          "HotelBrandCreateUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HotelBrandCreateUpdateDestroyLambdaVersionya0LG79hu6s7lkWt1fiIZ3sJ7HZwJ5tIC17U4E0Mec8"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-HotelBrandCreateUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "BuildingListCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BuildingListCreateLambdaVersion8vB4lsZHzR4IlaAHIRBAfAtREXpx3jft3MJDsvyMg"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-BuildingListCreateLambdaFunctionQualifiedArn"
            }
          },
          "BuildingUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BuildingUpdateDestroyLambdaVersionSpquCzRPX5fdz3GnQzoviH9Eg5ZN0iSvrkmnC9LXg1M"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-BuildingUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "FloorListCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FloorListCreateLambdaVersion70ntD27fJf2miUqZphDKzUft4hgpTQba6VBCIdmECs"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-FloorListCreateLambdaFunctionQualifiedArn"
            }
          },
          "FloorUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FloorUpdateDestroyLambdaVersionEesb6j2EbQHCGmCo5eLUTtxXasDeVN74Ob0chUMbE"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-FloorUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "RoomTypeListCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RoomTypeListCreateLambdaVersionGOZgX4K8PUnzTlcte3HI6P45c8k0a6JTOQUK61axAwU"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-RoomTypeListCreateLambdaFunctionQualifiedArn"
            }
          },
          "RoomTypeUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RoomTypeUpdateDestroyLambdaVersiongnQbkF4M35XeMkIH6FhzrTx4bJ0VvZqfswUHFRfOWQs"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-RoomTypeUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "RoomListCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RoomListCreateLambdaVersionnxmGVcU7GlQ8Ux2PsgmPDDewZA6AuBweg5P5Za7kyQ"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-RoomListCreateLambdaFunctionQualifiedArn"
            }
          },
          "RoomUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RoomUpdateDestroyLambdaVersionIy11zeOinPefBAjHR2LyPqKkQYns3ULVGRabCuls8kg"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-RoomUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-dev-gxp-service-hotel-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "main_service_name": "dev-gxp-service",
      "corsConfig": {
        "origin": "*",
        "headers": [
          "Content-Type",
          "X-Api-Key",
          "authorization"
        ]
      },
      "authorizerConfig": {
        "name": "JwtAuthorizer2",
        "resultTtlInSeconds": 0,
        "identitySource": "method.request.header.Authorization"
      },
      "jwtEnvironment": {
        "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
      }
    },
    "pluginsData": {},
    "functions": {
      "JwtAuthorizer2": {
        "handler": "common.jwt_auth.JwtAuthorizer",
        "timeout": 10,
        "environment": {
          "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
        },
        "events": [],
        "name": "dev-gxp-service-hotel-dev-JwtAuthorizer2",
        "package": {},
        "memory": 1024,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "JwtAuthorizer2LambdaVersionQhLVGx27dIj6CsnosPv9a6nZ5140vTfszsjhkd5C8Mo"
      },
      "hotelListCreateUpdateDestroy": {
        "handler": "hotel.hotel.hotelListCreateUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "hotel/hotel",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "hotel/hotel",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-hotelListCreateUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "HotelListCreateUpdateDestroyLambdaVersion3W2PhXIXBT7meRtY3KezEeQJZB7PYH6yNJ0nxSk"
      },
      "hotelListCreate": {
        "handler": "hotel.hotel.hotelListCreate",
        "events": [
          {
            "http": {
              "path": "hotel/hotel",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "hotel/hotel",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodHotelHotelPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-hotelListCreate",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "HotelListCreateLambdaVersionoJMVytgPhar2Cea38FBrMwYzecXElD1MNesP3ffhXxo"
      },
      "hotelUpdateDestroy": {
        "handler": "hotel.hotel.hotelUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "hotel/hotel/{id}",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodHotelHotelIdVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "hotel/hotel/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-hotelUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "HotelUpdateDestroyLambdaVersionT9QMw9A6wTtsd9h5Q5Z4Q8EXotZXLDPRjdZKrd5Lv0"
      },
      "hotelBrandlist": {
        "handler": "hotel.hotel_brand.hotelBrandlist",
        "events": [
          {
            "http": {
              "path": "hotel/hotel-brand",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-hotelBrandlist",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "HotelBrandlistLambdaVersioniakG1TM1P9f0GRW8CJN9vHOu2w3QCtNDLfrGrMVM2g"
      },
      "hotelBrandCreateUpdateDestroy": {
        "handler": "hotel.hotel_brand.hotelBrandCreateUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "hotel/hotel-brand",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodHotelHotelDashbrandPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "hotel/hotel-brand/{id}",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodHotelHotelDashbrandIdVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "hotel/hotel-brand/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-hotelBrandCreateUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "HotelBrandCreateUpdateDestroyLambdaVersionya0LG79hu6s7lkWt1fiIZ3sJ7HZwJ5tIC17U4E0Mec8"
      },
      "buildingListCreate": {
        "handler": "room.building.buildingListCreate",
        "events": [
          {
            "http": {
              "path": "room/room-building",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "room/room-building",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodRoomRoomDashbuildingPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-buildingListCreate",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "BuildingListCreateLambdaVersion8vB4lsZHzR4IlaAHIRBAfAtREXpx3jft3MJDsvyMg"
      },
      "buildingUpdateDestroy": {
        "handler": "room.building.buildingUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "room/room-building/{id}",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodRoomRoomDashbuildingIdVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "room/room-building/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-buildingUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "BuildingUpdateDestroyLambdaVersionSpquCzRPX5fdz3GnQzoviH9Eg5ZN0iSvrkmnC9LXg1M"
      },
      "floorListCreate": {
        "handler": "room.floor.floorListCreate",
        "events": [
          {
            "http": {
              "path": "room/room-floor",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "room/room-floor",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodRoomRoomDashfloorPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-floorListCreate",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "FloorListCreateLambdaVersion70ntD27fJf2miUqZphDKzUft4hgpTQba6VBCIdmECs"
      },
      "floorUpdateDestroy": {
        "handler": "room.floor.floorUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "room/room-floor/{id}",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodRoomRoomDashfloorIdVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "room/room-floor/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-floorUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "FloorUpdateDestroyLambdaVersionEesb6j2EbQHCGmCo5eLUTtxXasDeVN74Ob0chUMbE"
      },
      "roomTypeListCreate": {
        "handler": "room.room_type.roomTypeListCreate",
        "events": [
          {
            "http": {
              "path": "room/room-type",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "room/room-type",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodRoomRoomDashtypePostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-roomTypeListCreate",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "RoomTypeListCreateLambdaVersionGOZgX4K8PUnzTlcte3HI6P45c8k0a6JTOQUK61axAwU"
      },
      "roomTypeUpdateDestroy": {
        "handler": "room.room_type.roomTypeUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "room/room-type/{id}",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodRoomRoomDashtypeIdVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "room/room-type/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-roomTypeUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "RoomTypeUpdateDestroyLambdaVersiongnQbkF4M35XeMkIH6FhzrTx4bJ0VvZqfswUHFRfOWQs"
      },
      "roomListCreate": {
        "handler": "room.room.roomListCreate",
        "events": [
          {
            "http": {
              "path": "room/room",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "room/room",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodRoomRoomPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-roomListCreate",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "RoomListCreateLambdaVersionnxmGVcU7GlQ8Ux2PsgmPDDewZA6AuBweg5P5Za7kyQ"
      },
      "roomUpdateDestroy": {
        "handler": "room.room.roomUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "room/room/{id}",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodRoomRoomIdVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "room/room/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer2",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer2LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-hotel-dev-roomUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "RoomUpdateDestroyLambdaVersionIy11zeOinPefBAjHR2LyPqKkQYns3ULVGRabCuls8kg"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "dev-gxp-service-hotel",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "include": [
          "../utils/**",
          "../common/**",
          "../templates/**"
        ],
        "artifactsS3KeyDirname": "serverless/dev-gxp-service-hotel/dev/code-artifacts",
        "artifact": "C:\\Users\\kisha\\Desktop\\pms_dev\\GXP-Lambda\\HotelStack\\.serverless\\dev-gxp-service-hotel.zip",
        "artifactDirectoryName": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\kisha\\Desktop\\pms_dev\\GXP-Lambda\\HotelStack\\.serverless\\dev-gxp-service-hotel.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/dev-gxp-service-hotel/dev/1718272983422-2024-06-13T10:03:03.422Z",
    "artifact": "dev-gxp-service-hotel.zip"
  }
}