{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "JwtAuthorizer2LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-JwtAuthorizer2"
      }
    },
    "HotelListCreateUpdateDestroyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-hotelListCreateUpdateDestroy"
      }
    },
    "RoomTypeListCreateLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-roomTypeListCreate"
      }
    },
    "RoomTypeUpdateDestroyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-roomTypeUpdateDestroy"
      }
    },
    "HotelBrandlistLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-hotelBrandlist"
      }
    },
    "HotelBrandCreateUpdateDestroyLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/dev-gxp-service-hotel-dev-hotelBrandCreateUpdateDestroy"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev-gxp-service-hotel",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-gxp-service-hotel-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-gxp-service-hotel-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*",
                    "lambda:*"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "dev-gxp-service-hotel",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "JwtAuthorizer2LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dev-gxp-service-hotel/dev/1717756987862-2024-06-07T10:43:07.862Z/dev-gxp-service-hotel.zip"
        },
        "Handler": "common.jwt_auth.JwtAuthorizer",
        "Runtime": "python3.9",
        "FunctionName": "dev-gxp-service-hotel-dev-JwtAuthorizer2",
        "MemorySize": 1024,
        "Timeout": 10,
        "Environment": {
          "Variables": {
            "MY_API_KEY": "dev-gxp-service_apikey_dev",
            "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
        ]
      },
      "DependsOn": [
        "JwtAuthorizer2LogGroup"
      ]
    },
    "HotelListCreateUpdateDestroyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dev-gxp-service-hotel/dev/1717756987862-2024-06-07T10:43:07.862Z/dev-gxp-service-hotel.zip"
        },
        "Handler": "hotel.hotel.hotelListCreateUpdateDestroy",
        "Runtime": "python3.9",
        "FunctionName": "dev-gxp-service-hotel-dev-hotelListCreateUpdateDestroy",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MY_API_KEY": "dev-gxp-service_apikey_dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
        ]
      },
      "DependsOn": [
        "HotelListCreateUpdateDestroyLogGroup"
      ]
    },
    "RoomTypeListCreateLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dev-gxp-service-hotel/dev/1717756987862-2024-06-07T10:43:07.862Z/dev-gxp-service-hotel.zip"
        },
        "Handler": "hotel.room_type.roomTypeListCreate",
        "Runtime": "python3.9",
        "FunctionName": "dev-gxp-service-hotel-dev-roomTypeListCreate",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MY_API_KEY": "dev-gxp-service_apikey_dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
        ]
      },
      "DependsOn": [
        "RoomTypeListCreateLogGroup"
      ]
    },
    "RoomTypeUpdateDestroyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dev-gxp-service-hotel/dev/1717756987862-2024-06-07T10:43:07.862Z/dev-gxp-service-hotel.zip"
        },
        "Handler": "hotel.room_type.roomTypeUpdateDestroy",
        "Runtime": "python3.9",
        "FunctionName": "dev-gxp-service-hotel-dev-roomTypeUpdateDestroy",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MY_API_KEY": "dev-gxp-service_apikey_dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
        ]
      },
      "DependsOn": [
        "RoomTypeUpdateDestroyLogGroup"
      ]
    },
    "HotelBrandlistLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dev-gxp-service-hotel/dev/1717756987862-2024-06-07T10:43:07.862Z/dev-gxp-service-hotel.zip"
        },
        "Handler": "hotel.hotel_brand.hotelBrandlist",
        "Runtime": "python3.9",
        "FunctionName": "dev-gxp-service-hotel-dev-hotelBrandlist",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MY_API_KEY": "dev-gxp-service_apikey_dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
        ]
      },
      "DependsOn": [
        "HotelBrandlistLogGroup"
      ]
    },
    "HotelBrandCreateUpdateDestroyLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/dev-gxp-service-hotel/dev/1717756987862-2024-06-07T10:43:07.862Z/dev-gxp-service-hotel.zip"
        },
        "Handler": "hotel.hotel_brand.hotelBrandCreateUpdateDestroy",
        "Runtime": "python3.9",
        "FunctionName": "dev-gxp-service-hotel-dev-hotelBrandCreateUpdateDestroy",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MY_API_KEY": "dev-gxp-service_apikey_dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
        ]
      },
      "DependsOn": [
        "HotelBrandCreateUpdateDestroyLogGroup"
      ]
    },
    "JwtAuthorizer2LambdaVersionZlxy08PGgIn5zciYxi8950hzIntWibNMYYZuDU8Pc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "JwtAuthorizer2LambdaFunction"
        },
        "CodeSha256": "ZQnruTzNTy8NFChBeQbZtm8TIC4wNuN9AaUEX4CEucc="
      }
    },
    "HotelListCreateUpdateDestroyLambdaVersion0wD2oe5nwjfTURBZBizRhh463Kpdg5snIyO1HarV0U": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HotelListCreateUpdateDestroyLambdaFunction"
        },
        "CodeSha256": "ZQnruTzNTy8NFChBeQbZtm8TIC4wNuN9AaUEX4CEucc="
      }
    },
    "RoomTypeListCreateLambdaVersion9NScJvVKEzCIBWF04tgdi63fqjiVX3dJaTpEHUCbw4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RoomTypeListCreateLambdaFunction"
        },
        "CodeSha256": "ZQnruTzNTy8NFChBeQbZtm8TIC4wNuN9AaUEX4CEucc="
      }
    },
    "RoomTypeUpdateDestroyLambdaVersionkPoEXV6GxTU9WIeNMBiS7QofFEahjqtY3QawOO0R94": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RoomTypeUpdateDestroyLambdaFunction"
        },
        "CodeSha256": "ZQnruTzNTy8NFChBeQbZtm8TIC4wNuN9AaUEX4CEucc="
      }
    },
    "HotelBrandlistLambdaVersionbdtVEYY22FqXuo7wRlRLCv6JW29uGxxpsIRtC697s": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HotelBrandlistLambdaFunction"
        },
        "CodeSha256": "ZQnruTzNTy8NFChBeQbZtm8TIC4wNuN9AaUEX4CEucc="
      }
    },
    "HotelBrandCreateUpdateDestroyLambdaVersion0Z7XxOb7QOXoMqbe8dowIy9IPFjwyfQvIsuj7SSCY2M": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "HotelBrandCreateUpdateDestroyLambdaFunction"
        },
        "CodeSha256": "ZQnruTzNTy8NFChBeQbZtm8TIC4wNuN9AaUEX4CEucc="
      }
    },
    "ApiGatewayResourceHotel": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiRootResourceId"
        },
        "PathPart": "hotel",
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayResourceHotelHotel": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceHotel"
        },
        "PathPart": "hotel",
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayResourceHotelHotelDashbrand": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceHotel"
        },
        "PathPart": "hotel-brand",
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayResourceHotelHotelDashbrandIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceHotelHotelDashbrand"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayResourceRoom": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiRootResourceId"
        },
        "PathPart": "room",
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayResourceRoomRoomDashtype": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceRoom"
        },
        "PathPart": "room-type",
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayResourceRoomRoomDashtypeIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceRoomRoomDashtype"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodHotelHotelOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotel"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodRoomRoomDashtypeOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceRoomRoomDashtype"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodRoomRoomDashtypeIdVarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceRoomRoomDashtypeIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodHotelHotelDashbrandOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotelDashbrand"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodHotelHotelDashbrandIdVarOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotelDashbrandIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        }
      }
    },
    "ApiGatewayMethodHotelHotelGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotel"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HotelListCreateUpdateDestroyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodHotelHotelPatch": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotel"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HotelListCreateUpdateDestroyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodRoomRoomDashtypeGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRoomRoomDashtype"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RoomTypeListCreateLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodRoomRoomDashtypePost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRoomRoomDashtype"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RoomTypeListCreateLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodRoomRoomDashtypeIdVarPatch": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRoomRoomDashtypeIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RoomTypeUpdateDestroyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodRoomRoomDashtypeIdVarDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRoomRoomDashtypeIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RoomTypeUpdateDestroyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodHotelHotelDashbrandGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotelDashbrand"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HotelBrandlistLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodHotelHotelDashbrandPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotelDashbrand"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HotelBrandCreateUpdateDestroyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
        },
        "RequestModels": {
          "application/json": {
            "Ref": "ApiGatewayMethodHotelHotelDashbrandPostApplicationJsonModel"
          }
        }
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodHotelHotelDashbrandIdVarPatch": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PATCH",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotelDashbrandIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HotelBrandCreateUpdateDestroyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayDevgxpservicehotelRequestValidator"
        },
        "RequestModels": {
          "application/json": {
            "Ref": "ApiGatewayMethodHotelHotelDashbrandIdVarPatchApplicationJsonModel"
          }
        }
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayMethodHotelHotelDashbrandIdVarDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceHotelHotelDashbrandIdVar"
        },
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": {
          "Ref": "JwtAuthorizer2ApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "HotelBrandCreateUpdateDestroyLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "JwtAuthorizer2ApiGatewayAuthorizer"
      ]
    },
    "ApiGatewayDevgxpservicehotelRequestValidator": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true,
        "Name": "dev-gxp-service-hotel-dev | Validate request body and querystring parameters"
      }
    },
    "ApiGatewayMethodHotelHotelDashbrandPostApplicationJsonModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ContentType": "application/json",
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "HotelBrandCreate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 255
            },
            "email": {
              "type": "string",
              "format": "email",
              "maxLength": 255
            },
            "mobile": {
              "type": "string",
              "maxLength": 20
            },
            "mobile_iso": {
              "type": "string",
              "maxLength": 20
            },
            "favicon_icon": {
              "type": "string",
              "format": "uri"
            },
            "logo": {
              "type": "string",
              "format": "uri"
            },
            "membership_reward_image": {
              "type": "string",
              "format": "uri"
            },
            "membership_reward_tnc": {
              "type": "string"
            },
            "rewards_website_url": {
              "type": "string",
              "format": "uri"
            },
            "rewards_website_join_url": {
              "type": "string",
              "format": "uri"
            },
            "is_active": {
              "type": "boolean"
            },
            "is_support_membership_rewards": {
              "type": "boolean"
            },
            "address_line_first": {
              "type": "string"
            },
            "address_line_second": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "maxLength": 255
            },
            "state": {
              "type": "string",
              "maxLength": 255
            },
            "zip_code": {
              "type": "string",
              "maxLength": 20
            },
            "country": {
              "type": "string",
              "maxLength": 255
            },
            "website_url": {
              "type": "string",
              "format": "uri"
            },
            "contact_name": {
              "type": "string",
              "maxLength": 255
            },
            "contact_email": {
              "type": "string",
              "format": "email",
              "maxLength": 255
            },
            "contact_phone": {
              "type": "string",
              "maxLength": 20
            },
            "number_of_hotels": {
              "type": "integer"
            }
          },
          "required": [
            "name",
            "email",
            "mobile",
            "is_active",
            "is_support_membership_rewards",
            "address_line_first",
            "address_line_second",
            "city",
            "state",
            "zip_code",
            "country",
            "contact_name",
            "contact_email",
            "contact_phone"
          ],
          "additionalProperties": false
        }
      }
    },
    "ApiGatewayMethodHotelHotelDashbrandIdVarPatchApplicationJsonModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "ContentType": "application/json",
        "Schema": {
          "$schema": "http://json-schema.org/draft-07/schema#",
          "title": "HotelBrandUpdate",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "maxLength": 255
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "mobile": {
              "type": "string",
              "maxLength": 20
            },
            "mobile_iso": {
              "type": "string",
              "maxLength": 20
            },
            "favicon_icon": {
              "type": "string",
              "format": "uri"
            },
            "logo": {
              "type": "string",
              "format": "uri"
            },
            "membership_reward_image": {
              "type": "string",
              "format": "uri"
            },
            "membership_reward_tnc": {
              "type": "string"
            },
            "rewards_website_url": {
              "type": "string",
              "format": "uri"
            },
            "rewards_website_join_url": {
              "type": "string",
              "format": "uri"
            },
            "is_active": {
              "type": "boolean"
            },
            "is_support_membership_rewards": {
              "type": "boolean"
            },
            "address_line_first": {
              "type": "string"
            },
            "address_line_second": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "maxLength": 255
            },
            "state": {
              "type": "string",
              "maxLength": 255
            },
            "zip_code": {
              "type": "string",
              "maxLength": 20
            },
            "country": {
              "type": "string",
              "maxLength": 255
            },
            "website_url": {
              "type": "string",
              "format": "uri"
            },
            "contact_name": {
              "type": "string",
              "maxLength": 255
            },
            "contact_email": {
              "type": "string",
              "format": "email"
            },
            "contact_phone": {
              "type": "string",
              "maxLength": 20
            },
            "number_of_hotels": {
              "type": "integer"
            }
          },
          "required": [
            "email"
          ],
          "additionalProperties": false
        }
      }
    },
    "JwtAuthorizer2ApiGatewayAuthorizer": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": 0,
        "IdentitySource": "method.request.header.Authorization",
        "Name": "JwtAuthorizer2",
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "AuthorizerUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "JwtAuthorizer2LambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        },
        "Type": "TOKEN"
      }
    },
    "ApiGatewayDeployment1717756981114": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodHotelHotelOptions",
        "ApiGatewayMethodRoomRoomDashtypeOptions",
        "ApiGatewayMethodRoomRoomDashtypeIdVarOptions",
        "ApiGatewayMethodHotelHotelDashbrandOptions",
        "ApiGatewayMethodHotelHotelDashbrandIdVarOptions",
        "ApiGatewayMethodHotelHotelGet",
        "ApiGatewayMethodHotelHotelPatch",
        "ApiGatewayMethodRoomRoomDashtypeGet",
        "ApiGatewayMethodRoomRoomDashtypePost",
        "ApiGatewayMethodRoomRoomDashtypeIdVarPatch",
        "ApiGatewayMethodRoomRoomDashtypeIdVarDelete",
        "ApiGatewayMethodHotelHotelDashbrandGet",
        "ApiGatewayMethodHotelHotelDashbrandPost",
        "ApiGatewayMethodHotelHotelDashbrandIdVarPatch",
        "ApiGatewayMethodHotelHotelDashbrandIdVarDelete"
      ]
    },
    "HotelListCreateUpdateDestroyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "HotelListCreateUpdateDestroyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "JwtAuthorizer2LambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "JwtAuthorizer2LambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "RoomTypeListCreateLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RoomTypeListCreateLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "RoomTypeUpdateDestroyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RoomTypeUpdateDestroyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "HotelBrandlistLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "HotelBrandlistLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "HotelBrandCreateUpdateDestroyLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "HotelBrandCreateUpdateDestroyLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-dev-gxp-service-hotel-dev-ServerlessDeploymentBucketName"
      }
    },
    "JwtAuthorizer2LambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "JwtAuthorizer2LambdaVersionZlxy08PGgIn5zciYxi8950hzIntWibNMYYZuDU8Pc"
      },
      "Export": {
        "Name": "sls-dev-gxp-service-hotel-dev-JwtAuthorizer2LambdaFunctionQualifiedArn"
      }
    },
    "HotelListCreateUpdateDestroyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HotelListCreateUpdateDestroyLambdaVersion0wD2oe5nwjfTURBZBizRhh463Kpdg5snIyO1HarV0U"
      },
      "Export": {
        "Name": "sls-dev-gxp-service-hotel-dev-HotelListCreateUpdateDestroyLambdaFunctionQualifiedArn"
      }
    },
    "RoomTypeListCreateLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RoomTypeListCreateLambdaVersion9NScJvVKEzCIBWF04tgdi63fqjiVX3dJaTpEHUCbw4"
      },
      "Export": {
        "Name": "sls-dev-gxp-service-hotel-dev-RoomTypeListCreateLambdaFunctionQualifiedArn"
      }
    },
    "RoomTypeUpdateDestroyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RoomTypeUpdateDestroyLambdaVersionkPoEXV6GxTU9WIeNMBiS7QofFEahjqtY3QawOO0R94"
      },
      "Export": {
        "Name": "sls-dev-gxp-service-hotel-dev-RoomTypeUpdateDestroyLambdaFunctionQualifiedArn"
      }
    },
    "HotelBrandlistLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HotelBrandlistLambdaVersionbdtVEYY22FqXuo7wRlRLCv6JW29uGxxpsIRtC697s"
      },
      "Export": {
        "Name": "sls-dev-gxp-service-hotel-dev-HotelBrandlistLambdaFunctionQualifiedArn"
      }
    },
    "HotelBrandCreateUpdateDestroyLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HotelBrandCreateUpdateDestroyLambdaVersion0Z7XxOb7QOXoMqbe8dowIy9IPFjwyfQvIsuj7SSCY2M"
      },
      "Export": {
        "Name": "sls-dev-gxp-service-hotel-dev-HotelBrandCreateUpdateDestroyLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-dev-gxp-service-hotel-dev-ServiceEndpoint"
      }
    }
  }
}