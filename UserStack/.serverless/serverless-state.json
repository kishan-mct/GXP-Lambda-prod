{
  "service": {
    "service": "dev-gxp-service-user",
    "serviceObject": {
      "name": "dev-gxp-service-user"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "stage": "dev",
      "region": "us-east-1",
      "layers": [
        "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
      ],
      "apiGateway": {
        "restApiId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
        },
        "restApiRootResourceId": {
          "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiRootResourceId"
        }
      },
      "environment": {
        "MY_API_KEY": "dev-gxp-service_apikey_dev"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:*",
                "lambda:*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "JwtAuthorizer1LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-user-dev-JwtAuthorizer1"
            }
          },
          "UserAuthLoginLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-user-dev-userAuthLogin"
            }
          },
          "UserGetAccessTokebByRefereshTokenLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-user-dev-userGetAccessTokebByRefereshToken"
            }
          },
          "UserAccessHotelListDetailLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-user-dev-userAccessHotelListDetail"
            }
          },
          "UserProfileGetUpdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-user-dev-userProfileGetUpdate"
            }
          },
          "GxpUserListCreateUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-user-dev-gxpUserListCreateUpdateDestroy"
            }
          },
          "HotelUserListCreateUpdateDestroyLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/dev-gxp-service-user-dev-hotelUserListCreateUpdateDestroy"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev-gxp-service-user",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-gxp-service-user-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/dev-gxp-service-user-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "dev-gxp-service-user",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "JwtAuthorizer1LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z/dev-gxp-service-user.zip"
              },
              "Handler": "common.jwt_auth.JwtAuthorizer",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-user-dev-JwtAuthorizer1",
              "MemorySize": 1024,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev",
                  "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "JwtAuthorizer1LogGroup"
            ]
          },
          "UserAuthLoginLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z/dev-gxp-service-user.zip"
              },
              "Handler": "user_auth.user_auth.userAuthLogin",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-user-dev-userAuthLogin",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev",
                  "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "UserAuthLoginLogGroup"
            ]
          },
          "UserGetAccessTokebByRefereshTokenLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z/dev-gxp-service-user.zip"
              },
              "Handler": "user_auth.user_auth.userGetAccessTokebByRefereshToken",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-user-dev-userGetAccessTokebByRefereshToken",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev",
                  "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "UserGetAccessTokebByRefereshTokenLogGroup"
            ]
          },
          "UserAccessHotelListDetailLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z/dev-gxp-service-user.zip"
              },
              "Handler": "user_auth.user_auth.userAccessHotelListDetail",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-user-dev-userAccessHotelListDetail",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev",
                  "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "UserAccessHotelListDetailLogGroup"
            ]
          },
          "UserProfileGetUpdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z/dev-gxp-service-user.zip"
              },
              "Handler": "user_auth.user_profile.userProfileGetUpdate",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-user-dev-userProfileGetUpdate",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "UserProfileGetUpdateLogGroup"
            ]
          },
          "GxpUserListCreateUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z/dev-gxp-service-user.zip"
              },
              "Handler": "user.gxp_user.gxpUserListCreateUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-user-dev-gxpUserListCreateUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "GxpUserListCreateUpdateDestroyLogGroup"
            ]
          },
          "HotelUserListCreateUpdateDestroyLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z/dev-gxp-service-user.zip"
              },
              "Handler": "user.hotel_user.hotelUserListCreateUpdateDestroy",
              "Runtime": "python3.9",
              "FunctionName": "dev-gxp-service-user-dev-hotelUserListCreateUpdateDestroy",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MY_API_KEY": "dev-gxp-service_apikey_dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:813259119770:layer:GXP-Lambda:1"
              ]
            },
            "DependsOn": [
              "HotelUserListCreateUpdateDestroyLogGroup"
            ]
          },
          "JwtAuthorizer1LambdaVersionob89n1Y5KDWFvJZyLOg3GxhaZtOvJDIkWM7Ro7oQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "JwtAuthorizer1LambdaFunction"
              },
              "CodeSha256": "akfw/+f10O9ehZs6n7MXOYuULgzJJJUEX4J054fXtHo="
            }
          },
          "UserAuthLoginLambdaVersioniceXa5jBDoKZebaNurMPJ9IpDNFCDqKDJZCqDPc6Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserAuthLoginLambdaFunction"
              },
              "CodeSha256": "akfw/+f10O9ehZs6n7MXOYuULgzJJJUEX4J054fXtHo="
            }
          },
          "UserGetAccessTokebByRefereshTokenLambdaVersionmYXgxE5hSzufkfBnmYCZGqLzTcHRERYd30AttgLc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserGetAccessTokebByRefereshTokenLambdaFunction"
              },
              "CodeSha256": "akfw/+f10O9ehZs6n7MXOYuULgzJJJUEX4J054fXtHo="
            }
          },
          "UserAccessHotelListDetailLambdaVersionocEMXd7JDWGjq8Or6K5kBGkakMztdiiBuElIPzTVQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserAccessHotelListDetailLambdaFunction"
              },
              "CodeSha256": "akfw/+f10O9ehZs6n7MXOYuULgzJJJUEX4J054fXtHo="
            }
          },
          "UserProfileGetUpdateLambdaVersionXw4KczeLDqNeA9OZsvov6mQnul6OJFT3ud0QqjQJgf0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UserProfileGetUpdateLambdaFunction"
              },
              "CodeSha256": "akfw/+f10O9ehZs6n7MXOYuULgzJJJUEX4J054fXtHo="
            }
          },
          "GxpUserListCreateUpdateDestroyLambdaVersionfdk8ydshRGb0erezpwSTTEIIzdFqzvXY0ZmWzcxoqU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GxpUserListCreateUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "akfw/+f10O9ehZs6n7MXOYuULgzJJJUEX4J054fXtHo="
            }
          },
          "HotelUserListCreateUpdateDestroyLambdaVersionH3sb7KpPHf7oxeBa7r1iPKu6xby6J0ANKP3xz9JzAc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HotelUserListCreateUpdateDestroyLambdaFunction"
              },
              "CodeSha256": "akfw/+f10O9ehZs6n7MXOYuULgzJJJUEX4J054fXtHo="
            }
          },
          "ApiGatewayResourceAuth": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiRootResourceId"
              },
              "PathPart": "auth",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceAuthLogin": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAuth"
              },
              "PathPart": "login",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceAuthAccessDashtoken": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAuth"
              },
              "PathPart": "access-token",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceAuthHotel": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAuth"
              },
              "PathPart": "hotel",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceAuthHotelHotelidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAuthHotel"
              },
              "PathPart": "{hotel_id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceAuthProfile": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceAuth"
              },
              "PathPart": "profile",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceUser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiRootResourceId"
              },
              "PathPart": "user",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceUserGxpDashuser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "gxp-user",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceUserGxpDashuserIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUserGxpDashuser"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceUserHotelDashuser": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUser"
              },
              "PathPart": "hotel-user",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayResourceUserHotelDashuserIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUserHotelDashuser"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodAuthLoginOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthLogin"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodAuthAccessDashtokenOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthAccessDashtoken"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodAuthHotelOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthHotel"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodAuthHotelHotelidVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthHotelHotelidVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodAuthProfileOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,PATCH,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthProfile"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodUserGxpDashuserOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserGxpDashuser"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodUserGxpDashuserIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserGxpDashuserIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodUserHotelDashuserOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserHotelDashuser"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodUserHotelDashuserIdVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Api-Key,authorization'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,PATCH'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserHotelDashuserIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              }
            }
          },
          "ApiGatewayMethodAuthLoginPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthLogin"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserAuthLoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpserviceuserRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodAuthLoginPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "UserAuthLoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAuthLoginPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthLogin"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserAuthLoginLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpserviceuserRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodAuthLoginPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "UserAuthLoginLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAuthAccessDashtokenPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthAccessDashtoken"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserGetAccessTokebByRefereshTokenLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpserviceuserRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodAuthAccessDashtokenPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "UserGetAccessTokebByRefereshTokenLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodAuthHotelGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthHotel"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserAccessHotelListDetailLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodAuthHotelHotelidVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthHotelHotelidVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserAccessHotelListDetailLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodAuthProfileGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthProfile"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserProfileGetUpdateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodAuthProfilePatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceAuthProfile"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UserProfileGetUpdateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpserviceuserRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodAuthProfilePatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodUserGxpDashuserGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserGxpDashuser"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GxpUserListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodUserGxpDashuserPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserGxpDashuser"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GxpUserListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpserviceuserRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodUserGxpDashuserPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodUserGxpDashuserIdVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserGxpDashuserIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GxpUserListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpserviceuserRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodUserGxpDashuserIdVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodUserGxpDashuserIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserGxpDashuserIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GxpUserListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodUserHotelDashuserGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserHotelDashuser"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelUserListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodUserHotelDashuserPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserHotelDashuser"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelUserListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpserviceuserRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodUserHotelDashuserPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodUserHotelDashuserIdVarPatch": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PATCH",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserHotelDashuserIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelUserListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayDevgxpserviceuserRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodUserHotelDashuserIdVarPatchApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayMethodUserHotelDashuserIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUserHotelDashuserIdVar"
              },
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "JwtAuthorizer1ApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "HotelUserListCreateUpdateDestroyLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "JwtAuthorizer1ApiGatewayAuthorizer"
            ]
          },
          "ApiGatewayDevgxpserviceuserRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "dev-gxp-service-user-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayMethodAuthLoginPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "UserAuthLogin",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string"
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodAuthLoginPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "UserAuthLogin",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string"
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodAuthAccessDashtokenPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "UserAuthLogin",
                "type": "object",
                "properties": {
                  "data": {
                    "type": "string"
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodAuthProfilePatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "UserProfileUpdate",
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "mobile": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "mobile_iso": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "paswword": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "gender": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "profile_picture": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date"
                  },
                  "address_line_first": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "address_line_second": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "special_notes": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodUserGxpDashuserPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "GxpUserCreate",
                "type": "object",
                "properties": {
                  "user_type": {
                    "type": "string",
                    "maxLength": 20,
                    "enum": [
                      "super_admin",
                      "gxp_staff"
                    ]
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).+$"
                  },
                  "first_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "mobile": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "mobile_iso": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "gender": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "profile_picture": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date"
                  },
                  "address_line_first": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "address_line_second": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "special_notes": {
                    "type": "string"
                  },
                  "user_grouppermission": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "access_app_platform": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "user_type",
                  "email",
                  "password",
                  "access_app_platform",
                  "is_active"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodUserGxpDashuserIdVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "GxpUserUpdate",
                "type": "object",
                "properties": {
                  "user_type": {
                    "type": "string",
                    "maxLength": 20,
                    "enum": [
                      "super_admin",
                      "gxp_staff"
                    ]
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).+$"
                  },
                  "first_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "mobile": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "mobile_iso": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "gender": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "profile_picture": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date"
                  },
                  "address_line_first": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "address_line_second": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "special_notes": {
                    "type": "string"
                  },
                  "user_grouppermission": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "access_app_platform": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodUserHotelDashuserPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "HotelUserCreate",
                "type": "object",
                "properties": {
                  "user_type": {
                    "type": "string",
                    "maxLength": 20,
                    "enum": [
                      "hotel_admin",
                      "hotel_staff"
                    ]
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).+$"
                  },
                  "first_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "mobile": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "mobile_iso": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "gender": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "profile_picture": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date"
                  },
                  "address_line_first": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "address_line_second": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "special_notes": {
                    "type": "string"
                  },
                  "user_grouppermission": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "users_userhotel": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "access_app_platform": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "required": [
                  "user_type",
                  "email",
                  "password",
                  "access_app_platform",
                  "is_active"
                ],
                "additionalProperties": false
              }
            }
          },
          "ApiGatewayMethodUserHotelDashuserIdVarPatchApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "title": "HotelUserUpdate",
                "type": "object",
                "properties": {
                  "user_type": {
                    "type": "string",
                    "maxLength": 20,
                    "enum": [
                      "hotel_admin",
                      "hotel_staff"
                    ]
                  },
                  "is_active": {
                    "type": "boolean"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]).+$"
                  },
                  "first_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "last_name": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "mobile": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "mobile_iso": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "gender": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "profile_picture": {
                    "type": "string"
                  },
                  "date_of_birth": {
                    "type": "string",
                    "format": "date"
                  },
                  "address_line_first": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "address_line_second": {
                    "type": "string",
                    "maxLength": 250
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "zip_code": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "special_notes": {
                    "type": "string"
                  },
                  "user_grouppermission": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "users_userhotel": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "access_app_platform": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "JwtAuthorizer1ApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 0,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "JwtAuthorizer1",
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "JwtAuthorizer1LambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1717560608802": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAuthLoginOptions",
              "ApiGatewayMethodAuthAccessDashtokenOptions",
              "ApiGatewayMethodAuthHotelOptions",
              "ApiGatewayMethodAuthHotelHotelidVarOptions",
              "ApiGatewayMethodAuthProfileOptions",
              "ApiGatewayMethodUserGxpDashuserOptions",
              "ApiGatewayMethodUserGxpDashuserIdVarOptions",
              "ApiGatewayMethodUserHotelDashuserOptions",
              "ApiGatewayMethodUserHotelDashuserIdVarOptions",
              "ApiGatewayMethodAuthLoginPost",
              "ApiGatewayMethodAuthLoginPatch",
              "ApiGatewayMethodAuthAccessDashtokenPost",
              "ApiGatewayMethodAuthHotelGet",
              "ApiGatewayMethodAuthHotelHotelidVarPost",
              "ApiGatewayMethodAuthProfileGet",
              "ApiGatewayMethodAuthProfilePatch",
              "ApiGatewayMethodUserGxpDashuserGet",
              "ApiGatewayMethodUserGxpDashuserPost",
              "ApiGatewayMethodUserGxpDashuserIdVarPatch",
              "ApiGatewayMethodUserGxpDashuserIdVarDelete",
              "ApiGatewayMethodUserHotelDashuserGet",
              "ApiGatewayMethodUserHotelDashuserPost",
              "ApiGatewayMethodUserHotelDashuserIdVarPatch",
              "ApiGatewayMethodUserHotelDashuserIdVarDelete"
            ]
          },
          "UserAuthLoginLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserAuthLoginLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserGetAccessTokebByRefereshTokenLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserGetAccessTokebByRefereshTokenLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserAccessHotelListDetailLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserAccessHotelListDetailLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "JwtAuthorizer1LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "JwtAuthorizer1LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UserProfileGetUpdateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UserProfileGetUpdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GxpUserListCreateUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GxpUserListCreateUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "HotelUserListCreateUpdateDestroyLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HotelUserListCreateUpdateDestroyLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-ServerlessDeploymentBucketName"
            }
          },
          "JwtAuthorizer1LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "JwtAuthorizer1LambdaVersionob89n1Y5KDWFvJZyLOg3GxhaZtOvJDIkWM7Ro7oQ"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-JwtAuthorizer1LambdaFunctionQualifiedArn"
            }
          },
          "UserAuthLoginLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserAuthLoginLambdaVersioniceXa5jBDoKZebaNurMPJ9IpDNFCDqKDJZCqDPc6Y"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-UserAuthLoginLambdaFunctionQualifiedArn"
            }
          },
          "UserGetAccessTokebByRefereshTokenLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserGetAccessTokebByRefereshTokenLambdaVersionmYXgxE5hSzufkfBnmYCZGqLzTcHRERYd30AttgLc"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-UserGetAccessTokebByRefereshTokenLambdaFunctionQualifiedArn"
            }
          },
          "UserAccessHotelListDetailLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserAccessHotelListDetailLambdaVersionocEMXd7JDWGjq8Or6K5kBGkakMztdiiBuElIPzTVQ"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-UserAccessHotelListDetailLambdaFunctionQualifiedArn"
            }
          },
          "UserProfileGetUpdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UserProfileGetUpdateLambdaVersionXw4KczeLDqNeA9OZsvov6mQnul6OJFT3ud0QqjQJgf0"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-UserProfileGetUpdateLambdaFunctionQualifiedArn"
            }
          },
          "GxpUserListCreateUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GxpUserListCreateUpdateDestroyLambdaVersionfdk8ydshRGb0erezpwSTTEIIzdFqzvXY0ZmWzcxoqU"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-GxpUserListCreateUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "HotelUserListCreateUpdateDestroyLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HotelUserListCreateUpdateDestroyLambdaVersionH3sb7KpPHf7oxeBa7r1iPKu6xby6J0ANKP3xz9JzAc"
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-HotelUserListCreateUpdateDestroyLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::ImportValue": "dev-gxp-service-dev-ApiGatewayRestApiId"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-dev-gxp-service-user-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "main_service_name": "dev-gxp-service",
      "corsConfig": {
        "origin": "*",
        "headers": [
          "Content-Type",
          "X-Api-Key",
          "authorization"
        ]
      },
      "authorizerConfig": {
        "name": "JwtAuthorizer1",
        "resultTtlInSeconds": 0,
        "identitySource": "method.request.header.Authorization"
      },
      "jwtEnvironment": {
        "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
      }
    },
    "pluginsData": {},
    "functions": {
      "JwtAuthorizer1": {
        "handler": "common.jwt_auth.JwtAuthorizer",
        "timeout": 10,
        "environment": {
          "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
        },
        "events": [],
        "name": "dev-gxp-service-user-dev-JwtAuthorizer1",
        "package": {},
        "memory": 1024,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "JwtAuthorizer1LambdaVersionob89n1Y5KDWFvJZyLOg3GxhaZtOvJDIkWM7Ro7oQ"
      },
      "userAuthLogin": {
        "handler": "user_auth.user_auth.userAuthLogin",
        "environment": {
          "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
        },
        "events": [
          {
            "http": {
              "path": "auth/login",
              "method": "post",
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodAuthLoginPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "auth/login",
              "method": "patch",
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodAuthLoginPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-user-dev-userAuthLogin",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "UserAuthLoginLambdaVersioniceXa5jBDoKZebaNurMPJ9IpDNFCDqKDJZCqDPc6Y"
      },
      "userGetAccessTokebByRefereshToken": {
        "handler": "user_auth.user_auth.userGetAccessTokebByRefereshToken",
        "environment": {
          "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
        },
        "events": [
          {
            "http": {
              "path": "auth/access-token",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodAuthAccessDashtokenPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-user-dev-userGetAccessTokebByRefereshToken",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "UserGetAccessTokebByRefereshTokenLambdaVersionmYXgxE5hSzufkfBnmYCZGqLzTcHRERYd30AttgLc"
      },
      "userAccessHotelListDetail": {
        "handler": "user_auth.user_auth.userAccessHotelListDetail",
        "environment": {
          "JWT_SECRET": "gxp-lambda-t8ud@*d!85fc7lfw1ft2d9$=ni@=oo8&#*ae#lzfkg(sej_1(936936-"
        },
        "events": [
          {
            "http": {
              "path": "auth/hotel",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "auth/hotel/{hotel_id}",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-user-dev-userAccessHotelListDetail",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "UserAccessHotelListDetailLambdaVersionocEMXd7JDWGjq8Or6K5kBGkakMztdiiBuElIPzTVQ"
      },
      "userProfileGetUpdate": {
        "handler": "user_auth.user_profile.userProfileGetUpdate",
        "events": [
          {
            "http": {
              "path": "auth/profile",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "auth/profile",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodAuthProfilePatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-user-dev-userProfileGetUpdate",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "UserProfileGetUpdateLambdaVersionXw4KczeLDqNeA9OZsvov6mQnul6OJFT3ud0QqjQJgf0"
      },
      "gxpUserListCreateUpdateDestroy": {
        "handler": "user.gxp_user.gxpUserListCreateUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "user/gxp-user",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "user/gxp-user",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodUserGxpDashuserPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "user/gxp-user/{id}",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodUserGxpDashuserIdVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "user/gxp-user/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-user-dev-gxpUserListCreateUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "GxpUserListCreateUpdateDestroyLambdaVersionfdk8ydshRGb0erezpwSTTEIIzdFqzvXY0ZmWzcxoqU"
      },
      "hotelUserListCreateUpdateDestroy": {
        "handler": "user.hotel_user.hotelUserListCreateUpdateDestroy",
        "events": [
          {
            "http": {
              "path": "user/hotel-user",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "user/hotel-user",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodUserHotelDashuserPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "user/hotel-user/{id}",
              "method": "patch",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "PATCH"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodUserHotelDashuserIdVarPatchApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "user/hotel-user/{id}",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Api-Key",
                  "authorization"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "name": "JwtAuthorizer1",
                "arn": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"JwtAuthorizer1LambdaPermissionApiGateway\"][\"Properties\"][\"FunctionName\"]"
                },
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "dev-gxp-service-user-dev-hotelUserListCreateUpdateDestroy",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "HotelUserListCreateUpdateDestroyLambdaVersionH3sb7KpPHf7oxeBa7r1iPKu6xby6J0ANKP3xz9JzAc"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "dev-gxp-service-user",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "include": [
          "../utils/**",
          "../common/**",
          "../templates/**"
        ],
        "artifactsS3KeyDirname": "serverless/dev-gxp-service-user/dev/code-artifacts",
        "artifact": "C:\\Users\\kisha\\Desktop\\pms_dev\\GXP-Lambda\\UserStack\\.serverless\\dev-gxp-service-user.zip",
        "artifactDirectoryName": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\kisha\\Desktop\\pms_dev\\GXP-Lambda\\UserStack\\.serverless\\dev-gxp-service-user.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/dev-gxp-service-user/dev/1717560621377-2024-06-05T04:10:21.377Z",
    "artifact": "dev-gxp-service-user.zip"
  }
}